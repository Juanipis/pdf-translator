name: Automatic Release

on:
  push:
    branches:
      - main
      - release

# Definir los permisos necesarios para el GITHUB_TOKEN
permissions:
  contents: write # Necesario para pushear tags y releases
  issues: write # Necesario para crear issues (en caso de error)
  pull-requests: write # Necesario para comentar en PRs relacionados

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      new-release-published: ${{ steps.semantic.outputs.new_release_published }}
      new-release-version: ${{ steps.semantic.outputs.new_release_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Esto es crucial para que semantic-release pueda acceder a todo el historial de commits
          # y determinar la pr贸xima versi贸n correctamente.
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install system dependencies
        # Estas dependencias son necesarias para compilar el m贸dulo 'canvas' que es una dependencia indirecta
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libcairo2-dev libpango1.0-dev libjpeg-dev libgif-dev librsvg2-dev libpixman-1-dev

      - name: Install dependencies
        run: npm ci

      - name: Install semantic-release and plugins
        run: |
          npm install --no-save semantic-release @semantic-release/changelog @semantic-release/git @semantic-release/github @semantic-release/npm @semantic-release/exec

      - name: Run semantic-release
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

  build:
    needs: version
    if: needs.version.outputs.new-release-published == 'true'
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: v${{ needs.version.outputs.new-release-version }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install system dependencies
        # Estas dependencias son necesarias para compilar el m贸dulo 'canvas' que es una dependencia indirecta
        # Se instalan diferentes paquetes dependiendo del sistema operativo
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            sudo apt-get update
            sudo apt-get install -y build-essential libcairo2-dev libpango1.0-dev libjpeg-dev libgif-dev librsvg2-dev libpixman-1-dev
          elif [ "${{ matrix.os }}" == "macos-latest" ]; then
            brew install cairo pango jpeg giflib librsvg pixman
          fi
        shell: bash

      - name: Install dependencies
        run: npm ci

      - name: Build for Windows
        if: matrix.os == 'windows-latest'
        run: npm run build:win

      - name: Build for macOS
        if: matrix.os == 'macos-latest'
        run: npm run build:mac

      - name: Build for Linux
        if: matrix.os == 'ubuntu-latest'
        run: npm run build:linux

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts-${{ matrix.os }}
          path: |
            dist/*.exe
            dist/*.dmg
            dist/*.AppImage
            dist/*.deb
            dist/*.rpm
          if-no-files-found: ignore

  upload:
    needs: [version, build]
    runs-on: ubuntu-latest
    permissions:
      contents: write # Necesario para crear releases y subir artefactos
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./dist
          merge-multiple: true

      - name: Display structure of downloaded files
        run: ls -R ./dist

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.version.outputs.new-release-version }}
          files: |
            ./dist/*.exe
            ./dist/*.dmg
            ./dist/*.AppImage
            ./dist/*.deb
            ./dist/*.rpm
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
